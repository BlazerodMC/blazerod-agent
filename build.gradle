/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a commented-out sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/3.3/userguide/tutorial_java_projects.html
 */

/*
// Apply the java plugin to add support for Java
apply plugin: 'java'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.21'

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.12'
}
*/

import org.apache.tools.ant.filters.ReplaceTokens

buildscript {
    ext.kotlin_version = '1.0.6'

    repositories {
        mavenCentral()
        maven { url = "https://oss.sonatype.org/content/repositories/snapshots/" }
        jcenter()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}


plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '1.2.3'
}

apply plugin: 'kotlin'

group = 'com.blazerod'
version = '1.0.0'
description = """Analytics agent for blazerod.com"""
ext.url = 'https://github.com/BlazerodMC/blazerod-agent'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    maven { url 'https://maven-central.storage.googleapis.com' }
    maven { url 'https://hub.spigotmc.org/nexus/content/groups/public/' }
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
    maven { url 'http://lutece.paris.fr/nexus/content/repositories/lutece_third_party' }

    jcenter()
}

dependencies {
    compile group: 'org.spigotmc', name: 'spigot-api', version:'1.8.8-R0.1-SNAPSHOT'
    compile group: 'org.jetbrains.kotlin', name: 'kotlin-stdlib', version:"$kotlin_version"
    compile group: 'net.dv8tion', name: 'JDA', version:'1.4.0_238'
}

processResources {
    filter ReplaceTokens, tokens: [
            'DESCRIPTION': project.property('description'),
            'URL': project.property('url'),
            'VERSION': project.property('version')
    ]
}

build.finalizedBy(shadowJar)

shadowJar {
    classifier 'dist'
    dependencies {
        exclude(dependency('org.spigotmc:.*:.*'))
    }
    exclude '.cache'
}

task copyFinalJar(type: Copy) {
    from "build/libs/${shadowJar.archiveName}"
    into "build"
    rename(
            shadowJar.archiveName,
            "${project.property('name')}-${project.property('version')}.jar"
    )
}

shadowJar.finalizedBy(copyFinalJar)
